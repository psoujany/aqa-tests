<?xml version='1.0' encoding='UTF-8'?>
<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../TKG/playlist.xsd">
	<include>../jck.mk</include>
	<test>
		<testCaseName>jck_custom</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=$(JCK_CUSTOM_TARGET) jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck_target_folder_check</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(TEST_ROOT)$(D)jck$(D)jck_target_folder_check$(D)jck_target_folder_check.sh $(JCK_VERSION) $(JCK_ROOT) $(TEST_ROOT); \
	$(TEST_STATUS)</command>
		<levels>
			<level>special</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<disables>
			<disable>
				<comment>https://github.com/adoptium/TKG/issues/123</comment>
			</disable>
		</disables>
		<platformRequirements>os.linux,arch.x86,bits.64</platformRequirements>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-instrument</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/instrument jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-invoke</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/invoke jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-reflect</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/reflect jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-Package</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/Package jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-String</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/String jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-StringBuilder</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/StringBuilder jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-StringBuffer</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/StringBuffer jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-ClassLoader</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/ClassLoader jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-ModuleLayer</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/ModuleLayer jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-module</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/module jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-StackWalker</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/StackWalker jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-Module_class</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/Module_class jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-SecurityManager</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/SecurityManager jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-System</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/System jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-constant</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/constant jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>12+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-Class</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang/Class jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-signaturetest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/signaturetest jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-modulegraph</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/modulegraph jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_util-regex</testCaseName>
		<disables>
			<disable>
				<comment>Temporarily disabled on z/OS for backlog/issues/669</comment>
				<platform>.*zos.*</platform>
				<impl>ibm</impl>
				<version>11</version>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_util/regex jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_naming-spi</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on osx for backlog/issues/739, in the interim these targets will be run manually</comment><platform>x86-64_mac</platform>
				<impl>ibm</impl>
				<version>8</version>
			</disable>
			<disable>
				<comment>Disabled on osx for backlog/issues/739, in the interim these targets will be run manually</comment><platform>x86-64_mac</platform>
				<impl>openj9</impl>
				<version>8</version>
			</disable>
			<disable>
				<comment>Disabled on osx for backlog/issues/739, in the interim these targets will be run manually</comment><platform>x86-64_mac</platform>
				<impl>ibm</impl>
				<version>17</version>
			</disable>
			<disable>
				<comment>Disabled on osx for backlog/issues/739, in the interim these targets will be run manually</comment><platform>x86-64_mac</platform>
				<impl>openj9</impl>
				<version>17</version>
			</disable>
			<disable>
				<comment>Disabled on osx for backlog/issues/739, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac</platform>
				<impl>ibm</impl>
				<version>18</version>
			</disable>
			<disable>
				<comment>Disabled on osx for backlog/issues/739, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac</platform>
				<impl>openj9</impl>
				<version>18</version>
			</disable>
 			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-64_mac|aarch64_mac</platform>
  				<impl>hotspot</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_naming/spi jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_util-ResourceBundle</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_util/ResourceBundle jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_applet</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254; on aix for backlog/issues/486. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac|ppc64_aix</platform>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254; on aix for backlog/issues/486. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac|ppc64_aix</platform>
				<impl>openj9</impl>
			</disable>
  			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-64_mac|aarch64_mac</platform>
				<impl>hotspot</impl>
 			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_applet jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_awt</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254, and on rest for backlog/issues/485. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254, and on rest for backlog/issues/485. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-64_mac|aarch64_mac</platform>
				<impl>hotspot</impl>
			</disable>
			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-32_windows</platform>
				<impl>hotspot</impl>
 			</disable>
 			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-64_windows</platform>
				<impl>hotspot</impl>
 			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_awt jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_beans</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254; on aix for backlog/issues/486. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac|ppc64_aix</platform>
				<version>11</version>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac</platform>
				<version>8</version>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac</platform>
				<version>16+</version>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254; on aix for backlog/issues/486. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac|ppc64_aix</platform>
				<version>11</version>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac</platform>
				<version>8</version>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac</platform>
				<version>16+</version>
				<impl>openj9</impl>
			</disable>
 			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-64_mac|aarch64_mac</platform>
				<impl>hotspot</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_beans jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_io</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_io jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_lang jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_math</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_math jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_net</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on all platforms due to backlog/issues/462. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<version>11</version>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on all platforms due to backlog/issues/462. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<version>16+</version>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on all platforms due to backlog/issues/462. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<version>8</version>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on all platforms due to backlog/issues/462. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<version>11</version>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Disabled on all platforms due to backlog/issues/462. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<version>16+</version>
				<impl>openj9</impl>
			</disable>
			<disable>
			<comment>Disabled on all platforms due to backlog/issues/462. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
			<version>8</version>
			<impl>openj9</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_net jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME concurrency=1 configAltPath=$(CONFIG_ALT_PATH); \
	$(TEST_STATUS)</command>
		<levels>
			<level>special</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_nio</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_nio jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME configAltPath=$(CONFIG_ALT_PATH); \
	$(TEST_STATUS)</command>
		<levels>
			<level>special</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_rmi</testCaseName>
		<disables>
			<disable>
				<comment>Temporarily disabled on z/OS for backlog/issues/744</comment>
				<platform>.*zos.*</platform>
				<impl>ibm</impl>
				<version>11</version>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_rmi jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME concurrency=1; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_security</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on win for backlog/issues/488. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_windows|x86-32_windows</platform>
				<version>11</version>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on win for backlog/issues/488. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_windows|x86-32_windows</platform>
				<version>8</version>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on win for backlog/issues/488. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_windows|x86-32_windows</platform>
				<version>17</version>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on win for backlog/issues/488. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_windows|x86-32_windows</platform>
				<version>11</version>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Disabled on win for backlog/issues/488. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_windows|x86-32_windows</platform>
				<version>8</version>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Disabled on win for backlog/issues/488. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_windows|x86-32_windows</platform>
				<version>17</version>
				<impl>openj9</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_security jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_sql</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_sql jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_text</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_text jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_time</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_time jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_util</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on osx and win for backlog/issues/489. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_windows|x86-64_mac</platform>
				<version>11</version>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on osx and win for backlog/issues/489. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_windows|x86-64_mac</platform>
				<version>11</version>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Disabled on z/OS due to backlog/issues/732</comment>
				<platform>.*zos.*</platform>
				<impl>ibm</impl>
				<version>11</version>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/java_util jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_accessibility</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254; on aix for backlog/issues/486. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac|ppc64_aix|aarch64_mac</platform>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254; on aix for backlog/issues/486. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac|ppc64_aix|aarch64_mac</platform>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-64_mac|aarch64_mac</platform>
				<impl>hotspot</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_accessibility jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_activation</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_activation jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>8</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_activity</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_activity jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>8</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_annotation</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_annotation jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_crypto</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on z/OS due to backlog/issues/730</comment>
				<platform>.*zos.*</platform>
				<impl>ibm</impl>
				<version>11</version>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_crypto jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_imageio</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac</platform>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac</platform>
				<impl>openj9</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_imageio jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_lang</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_lang jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_management</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on z/OS due to backlog/issues/730</comment>
				<platform>.*zos.*</platform>
				<impl>ibm</impl>
				<version>11</version>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_management jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_naming</testCaseName>
		<disables>
			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-64_mac|aarch64_mac</platform>
				<impl>hotspot</impl>
  			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_naming jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_net</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on z/OS due to backlog/issues/461</comment>
				<version>8</version>
				<impl>ibm</impl>
				<platform>.*zos.*</platform>
			</disable>
			<disable>
				<comment>Disabled on z/OS due to backlog/issues/744</comment>
				<version>11</version>
				<impl>ibm</impl>
				<platform>s390x_zos</platform>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_net jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME concurrency=1; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_print</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac</platform>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<platform>x86-64_mac</platform>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-64_mac|aarch64_mac</platform>
				<impl>hotspot</impl>
			</disable>
			<disable>
				<comment>Disabled on all platforms on 17 for backlog/issues/633 (intermittent machine issue). To be run manually</comment>
				<version>17+</version>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Disabled on all platforms on 17 for backlog/issues/633 (intermittent machine issue). To be run manually</comment>
				<version>17+</version>
				<impl>ibm</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_print jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_rmi</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on z/OS due to backlog/issues/744</comment>
				<version>11</version>
				<impl>ibm</impl>
				<platform>s390x_zos</platform>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_rmi jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_script</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_script jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_security</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_security jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME configAltPath=$(CONFIG_ALT_PATH); \
	$(TEST_STATUS)</command>
		<levels>
			<level>special</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_sound</testCaseName>
		<disables>
 			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-64_mac|aarch64_mac</platform>
				<impl>hotspot</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_sound jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_sql</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_sql jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_swing</testCaseName>
		<disables>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254, on win for backlog/issues/487 and on others for backlog/issues/484. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<impl>ibm</impl>
			</disable>
			<disable>
				<comment>Disabled on osx for infrastructure/issues/5254, on win for backlog/issues/487 and on others for backlog/issues/484. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-64_mac|aarch64_mac</platform>
				<impl>hotspot</impl>
			</disable>
			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-32_windows</platform>
				<impl>hotspot</impl>
			</disable>
			<disable>
				<comment>Requires UI https://github.com/temurin-compliance/temurin-compliance/issues/29</comment>
				<platform>x86-64_windows</platform>
				<impl>hotspot</impl>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_swing jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_tools</testCaseName>
		<disables>
			<disable>
				<comment>Temporarily disabled on z/OS for backlog/issues/669</comment>
				<platform>.*zos.*</platform>
				<impl>ibm</impl>
				<version>11</version>
			</disable>
		</disables>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_tools jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-javax_transaction</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_transaction jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>8</version>
			<version>15+</version>
		</versions>
	</test>
    <test>
		<testCaseName>jck-runtime-api-javax_xml</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/javax_xml jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME concurrency=1; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<disables>
			<disable>
				<comment>backlog/issues/600</comment>
				<impl>openj9</impl>
			</disable>
			<disable>
				<comment>backlog/issues/600</comment>
				<impl>ibm</impl>
			</disable>
		</disables>
	</test>
	<test>
		<testCaseName>jck-runtime-api-org_ietf</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/org_ietf jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME configAltPath=$(CONFIG_ALT_PATH); \
	$(TEST_STATUS)</command>
		<levels>
			<level>special</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-org_omg</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/org_omg jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>8</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-api-org_w3c</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/org_w3c jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-org_xml</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/org_xml jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-xinclude</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/xinclude jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-xsl</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/xsl jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-api-serializabletypes</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) tests=api/serializabletypes jckRoot=$(JCK_ROOT) jckversion=$(JCK_VERSION) testsuite=RUNTIME; \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
</playlist>
